TYPE, EXTENDS(fungroup), PUBLIC :: Het
    

  ::rho_F  = [108 136 94] 

  ::rho_Na  = [108 136 94] 

  ::rho_Pa  = [108 136 94] 



CONTAINS
    PROCEDURE :: flux => Het_flux
    PROCEDURE :: read => Het_read
    PROCEDURE :: set => Het_set 

CONTAINS

SUBROUTINE _read (grp, env, lun)    
    IMPLICIT NONE
    CLASS(Het), TARGET, INTENT(INOUT) :: grp
    TYPE(local), TARGET, INTENT(IN) :: env
    INTEGER, INTENT(IN) :: lun

    DO
    
        quantity(rho_F, )
    
        quantity(rho_Na, )
    
        quantity(rho_Pa, )
    
    READ (lun, NML=bac, END=100, IOMSG=msg, ERR=900)
    IF (TRIM(species).EQ.TRIM(grp%name)) EXIT
END DO


    
    grp%rho_F = rho_F
    

    
    grp%rho_Na = rho_Na
    

    
    grp%rho_Pa = rho_Pa
    


SUBROUTINE _flux (grp, grps, env)   
    IMPLICIT NONE
    CLASS(Het), TARGET, INTENT(INOUT) :: grp
    TYPE(state), DIMENSION(:), INTENT(IN) :: grps
    TYPE(local), TARGET, INTENT(INOUT) :: env

SUBROUTINE _flux (grp, grps, env, box, times)
    IMPLICIT NONE
    CLASS(Het), INTENT(INOUT) :: grp
    TYPE(state), DIMENSION(:), INTENT(IN) :: grps
    TYPE(local), INTENT(INOUT) :: env
    TYPE(layer), INTENT(INOUT) :: box(0:)
    TYPE(timing), INTENT(IN) :: times
