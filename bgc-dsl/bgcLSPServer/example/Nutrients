TYPE, EXTENDS(fungroup), PUBLIC :: Nutrients
    

  ::rho_C  = [108 136 94] 

  ::rho_N  = [108 136 94] 

  ::rho_P  = [108 136 94] 



CONTAINS
    PROCEDURE :: flux => Nutrients_flux
    PROCEDURE :: read => Nutrients_read
    PROCEDURE :: set => Nutrients_set 

CONTAINS

SUBROUTINE _read (grp, env, lun)    
    IMPLICIT NONE
    CLASS(Nutrients), TARGET, INTENT(INOUT) :: grp
    TYPE(local), TARGET, INTENT(IN) :: env
    INTEGER, INTENT(IN) :: lun

    DO
    
        quantity(rho_C, )
    
        quantity(rho_N, )
    
        quantity(rho_P, )
    
    READ (lun, NML=bac, END=100, IOMSG=msg, ERR=900)
    IF (TRIM(species).EQ.TRIM(grp%name)) EXIT
END DO


    
    grp%rho_C = rho_C
    

    
    grp%rho_N = rho_N
    

    
    grp%rho_P = rho_P
    


SUBROUTINE _flux (grp, grps, env)   
    IMPLICIT NONE
    CLASS(Nutrients), TARGET, INTENT(INOUT) :: grp
    TYPE(state), DIMENSION(:), INTENT(IN) :: grps
    TYPE(local), TARGET, INTENT(INOUT) :: env

SUBROUTINE _flux (grp, grps, env, box, times)
    IMPLICIT NONE
    CLASS(Nutrients), INTENT(INOUT) :: grp
    TYPE(state), DIMENSION(:), INTENT(IN) :: grps
    TYPE(local), INTENT(INOUT) :: env
    TYPE(layer), INTENT(INOUT) :: box(0:)
    TYPE(timing), INTENT(IN) :: times
