// Generated from /home/sgu/IdeaProjects/antlr4-python/tdd-dsl/src/grammars/CommonLexerRules.g4 by ANTLR 4.12.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class CommonLexerRules extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ID=1, STRING=2, COMMENT=3, INT=4, NUM=5, DP=6, TDD_COMMENT=7, NEWLINE=8, 
		WS=9;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ID", "STRING", "COMMENT", "ESC", "INT", "NUM", "DP", "EXP", "DEXP", 
			"DIG", "TDD_COMMENT", "NEWLINE", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ID", "STRING", "COMMENT", "INT", "NUM", "DP", "TDD_COMMENT", "NEWLINE", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CommonLexerRules(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CommonLexerRules.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\t\u00a8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0001\u0000\u0001\u0000\u0005\u0000\u001e"+
		"\b\u0000\n\u0000\f\u0000!\t\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0005\u0001&\b\u0001\n\u0001\f\u0001)\t\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0005\u00020\b\u0002\n\u0002\f\u0002"+
		"3\t\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0005\u0004=\b\u0004\n\u0004\f\u0004"+
		"@\t\u0004\u0003\u0004B\b\u0004\u0001\u0005\u0003\u0005E\b\u0005\u0001"+
		"\u0005\u0001\u0005\u0004\u0005I\b\u0005\u000b\u0005\f\u0005J\u0001\u0005"+
		"\u0004\u0005N\b\u0005\u000b\u0005\f\u0005O\u0001\u0005\u0001\u0005\u0005"+
		"\u0005T\b\u0005\n\u0005\f\u0005W\t\u0005\u0003\u0005Y\b\u0005\u0001\u0005"+
		"\u0003\u0005\\\b\u0005\u0003\u0005^\b\u0005\u0001\u0006\u0003\u0006a\b"+
		"\u0006\u0001\u0006\u0001\u0006\u0004\u0006e\b\u0006\u000b\u0006\f\u0006"+
		"f\u0001\u0006\u0004\u0006j\b\u0006\u000b\u0006\f\u0006k\u0001\u0006\u0001"+
		"\u0006\u0005\u0006p\b\u0006\n\u0006\f\u0006s\t\u0006\u0003\u0006u\b\u0006"+
		"\u0001\u0006\u0003\u0006x\b\u0006\u0003\u0006z\b\u0006\u0001\u0007\u0001"+
		"\u0007\u0003\u0007~\b\u0007\u0001\u0007\u0004\u0007\u0081\b\u0007\u000b"+
		"\u0007\f\u0007\u0082\u0001\b\u0001\b\u0003\b\u0087\b\b\u0001\b\u0004\b"+
		"\u008a\b\b\u000b\b\f\b\u008b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0005\n\u0094\b\n\n\n\f\n\u0097\t\n\u0001\n\u0001\n\u0001\n\u0001\n"+
		"\u0001\u000b\u0003\u000b\u009e\b\u000b\u0001\u000b\u0001\u000b\u0001\f"+
		"\u0004\f\u00a3\b\f\u000b\f\f\f\u00a4\u0001\f\u0001\f\u0003\'1\u0095\u0000"+
		"\r\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0000\t\u0004\u000b\u0005"+
		"\r\u0006\u000f\u0000\u0011\u0000\u0013\u0000\u0015\u0007\u0017\b\u0019"+
		"\t\u0001\u0000\b\u0002\u0000AZaz\u0004\u000009AZ__az\u0007\u0000\"\"\'"+
		"\'\\\\bbnnrrtt\u0001\u000019\u0002\u0000EEee\u0002\u0000++--\u0001\u0000"+
		"09\u0002\u0000\t\t  \u00bf\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0001\u001b\u0001\u0000"+
		"\u0000\u0000\u0003\"\u0001\u0000\u0000\u0000\u0005,\u0001\u0000\u0000"+
		"\u0000\u00076\u0001\u0000\u0000\u0000\tA\u0001\u0000\u0000\u0000\u000b"+
		"D\u0001\u0000\u0000\u0000\r`\u0001\u0000\u0000\u0000\u000f{\u0001\u0000"+
		"\u0000\u0000\u0011\u0084\u0001\u0000\u0000\u0000\u0013\u008d\u0001\u0000"+
		"\u0000\u0000\u0015\u008f\u0001\u0000\u0000\u0000\u0017\u009d\u0001\u0000"+
		"\u0000\u0000\u0019\u00a2\u0001\u0000\u0000\u0000\u001b\u001f\u0007\u0000"+
		"\u0000\u0000\u001c\u001e\u0007\u0001\u0000\u0000\u001d\u001c\u0001\u0000"+
		"\u0000\u0000\u001e!\u0001\u0000\u0000\u0000\u001f\u001d\u0001\u0000\u0000"+
		"\u0000\u001f \u0001\u0000\u0000\u0000 \u0002\u0001\u0000\u0000\u0000!"+
		"\u001f\u0001\u0000\u0000\u0000\"\'\u0005\'\u0000\u0000#&\u0003\u0007\u0003"+
		"\u0000$&\t\u0000\u0000\u0000%#\u0001\u0000\u0000\u0000%$\u0001\u0000\u0000"+
		"\u0000&)\u0001\u0000\u0000\u0000\'(\u0001\u0000\u0000\u0000\'%\u0001\u0000"+
		"\u0000\u0000(*\u0001\u0000\u0000\u0000)\'\u0001\u0000\u0000\u0000*+\u0005"+
		"\'\u0000\u0000+\u0004\u0001\u0000\u0000\u0000,1\u0005#\u0000\u0000-0\u0003"+
		"\u0007\u0003\u0000.0\t\u0000\u0000\u0000/-\u0001\u0000\u0000\u0000/.\u0001"+
		"\u0000\u0000\u000003\u0001\u0000\u0000\u000012\u0001\u0000\u0000\u0000"+
		"1/\u0001\u0000\u0000\u000024\u0001\u0000\u0000\u000031\u0001\u0000\u0000"+
		"\u000045\u0003\u0017\u000b\u00005\u0006\u0001\u0000\u0000\u000067\u0005"+
		"\\\u0000\u000078\u0007\u0002\u0000\u00008\b\u0001\u0000\u0000\u00009B"+
		"\u00050\u0000\u0000:>\u0007\u0003\u0000\u0000;=\u0003\u0013\t\u0000<;"+
		"\u0001\u0000\u0000\u0000=@\u0001\u0000\u0000\u0000><\u0001\u0000\u0000"+
		"\u0000>?\u0001\u0000\u0000\u0000?B\u0001\u0000\u0000\u0000@>\u0001\u0000"+
		"\u0000\u0000A9\u0001\u0000\u0000\u0000A:\u0001\u0000\u0000\u0000B\n\u0001"+
		"\u0000\u0000\u0000CE\u0005-\u0000\u0000DC\u0001\u0000\u0000\u0000DE\u0001"+
		"\u0000\u0000\u0000E]\u0001\u0000\u0000\u0000FH\u0005.\u0000\u0000GI\u0003"+
		"\u0013\t\u0000HG\u0001\u0000\u0000\u0000IJ\u0001\u0000\u0000\u0000JH\u0001"+
		"\u0000\u0000\u0000JK\u0001\u0000\u0000\u0000K^\u0001\u0000\u0000\u0000"+
		"LN\u0003\u0013\t\u0000ML\u0001\u0000\u0000\u0000NO\u0001\u0000\u0000\u0000"+
		"OM\u0001\u0000\u0000\u0000OP\u0001\u0000\u0000\u0000PX\u0001\u0000\u0000"+
		"\u0000QU\u0005.\u0000\u0000RT\u0003\u0013\t\u0000SR\u0001\u0000\u0000"+
		"\u0000TW\u0001\u0000\u0000\u0000US\u0001\u0000\u0000\u0000UV\u0001\u0000"+
		"\u0000\u0000VY\u0001\u0000\u0000\u0000WU\u0001\u0000\u0000\u0000XQ\u0001"+
		"\u0000\u0000\u0000XY\u0001\u0000\u0000\u0000Y[\u0001\u0000\u0000\u0000"+
		"Z\\\u0003\u000f\u0007\u0000[Z\u0001\u0000\u0000\u0000[\\\u0001\u0000\u0000"+
		"\u0000\\^\u0001\u0000\u0000\u0000]F\u0001\u0000\u0000\u0000]M\u0001\u0000"+
		"\u0000\u0000^\f\u0001\u0000\u0000\u0000_a\u0005-\u0000\u0000`_\u0001\u0000"+
		"\u0000\u0000`a\u0001\u0000\u0000\u0000ay\u0001\u0000\u0000\u0000bd\u0005"+
		".\u0000\u0000ce\u0003\u0013\t\u0000dc\u0001\u0000\u0000\u0000ef\u0001"+
		"\u0000\u0000\u0000fd\u0001\u0000\u0000\u0000fg\u0001\u0000\u0000\u0000"+
		"gz\u0001\u0000\u0000\u0000hj\u0003\u0013\t\u0000ih\u0001\u0000\u0000\u0000"+
		"jk\u0001\u0000\u0000\u0000ki\u0001\u0000\u0000\u0000kl\u0001\u0000\u0000"+
		"\u0000lt\u0001\u0000\u0000\u0000mq\u0005.\u0000\u0000np\u0003\u0013\t"+
		"\u0000on\u0001\u0000\u0000\u0000ps\u0001\u0000\u0000\u0000qo\u0001\u0000"+
		"\u0000\u0000qr\u0001\u0000\u0000\u0000ru\u0001\u0000\u0000\u0000sq\u0001"+
		"\u0000\u0000\u0000tm\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000"+
		"uw\u0001\u0000\u0000\u0000vx\u0003\u0011\b\u0000wv\u0001\u0000\u0000\u0000"+
		"wx\u0001\u0000\u0000\u0000xz\u0001\u0000\u0000\u0000yb\u0001\u0000\u0000"+
		"\u0000yi\u0001\u0000\u0000\u0000z\u000e\u0001\u0000\u0000\u0000{}\u0007"+
		"\u0004\u0000\u0000|~\u0007\u0005\u0000\u0000}|\u0001\u0000\u0000\u0000"+
		"}~\u0001\u0000\u0000\u0000~\u0080\u0001\u0000\u0000\u0000\u007f\u0081"+
		"\u0003\u0013\t\u0000\u0080\u007f\u0001\u0000\u0000\u0000\u0081\u0082\u0001"+
		"\u0000\u0000\u0000\u0082\u0080\u0001\u0000\u0000\u0000\u0082\u0083\u0001"+
		"\u0000\u0000\u0000\u0083\u0010\u0001\u0000\u0000\u0000\u0084\u0086\u0005"+
		"D\u0000\u0000\u0085\u0087\u0007\u0005\u0000\u0000\u0086\u0085\u0001\u0000"+
		"\u0000\u0000\u0086\u0087\u0001\u0000\u0000\u0000\u0087\u0089\u0001\u0000"+
		"\u0000\u0000\u0088\u008a\u0003\u0013\t\u0000\u0089\u0088\u0001\u0000\u0000"+
		"\u0000\u008a\u008b\u0001\u0000\u0000\u0000\u008b\u0089\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u0012\u0001\u0000\u0000"+
		"\u0000\u008d\u008e\u0007\u0006\u0000\u0000\u008e\u0014\u0001\u0000\u0000"+
		"\u0000\u008f\u0090\u0005/\u0000\u0000\u0090\u0091\u0005/\u0000\u0000\u0091"+
		"\u0095\u0001\u0000\u0000\u0000\u0092\u0094\t\u0000\u0000\u0000\u0093\u0092"+
		"\u0001\u0000\u0000\u0000\u0094\u0097\u0001\u0000\u0000\u0000\u0095\u0096"+
		"\u0001\u0000\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000\u0096\u0098"+
		"\u0001\u0000\u0000\u0000\u0097\u0095\u0001\u0000\u0000\u0000\u0098\u0099"+
		"\u0003\u0017\u000b\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u009b"+
		"\u0006\n\u0000\u0000\u009b\u0016\u0001\u0000\u0000\u0000\u009c\u009e\u0005"+
		"\r\u0000\u0000\u009d\u009c\u0001\u0000\u0000\u0000\u009d\u009e\u0001\u0000"+
		"\u0000\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u00a0\u0005\n\u0000"+
		"\u0000\u00a0\u0018\u0001\u0000\u0000\u0000\u00a1\u00a3\u0007\u0007\u0000"+
		"\u0000\u00a2\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001\u0000\u0000"+
		"\u0000\u00a4\u00a2\u0001\u0000\u0000\u0000\u00a4\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6\u00a7\u0006\f\u0000\u0000"+
		"\u00a7\u001a\u0001\u0000\u0000\u0000\u001d\u0000\u001f%\'/1>ADJOUX[]`"+
		"fkqtwy}\u0082\u0086\u008b\u0095\u009d\u00a4\u0001\u0000\u0001\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}